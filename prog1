#include <iostream>
#include <cstdlib>
#include <ctime>

using namespace std;

int main() {
        //seed random generation, and preset all variables to avoid bugs.       
        srand(time(0));
        int player_answer = 0;
        int player_life = 5, num1 = 0, num2 = 0;
        int operator_choice = 0, correct_answer = 0;
        int game_score = 0, num_questions = 0;
        int start_command = 0, switch_var = 0, attempts = 0;
        bool answered_correctly = false;
        char operator_symbol;

        //print formatted welcome messsage.
        cout << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
        cout << "               Welcome to my math quiz!                \n";
        cout << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
        cout << "  You will be asked to solve simple arithmetic problems!\n";
        cout << "       You'll have two chances for each problem,\n";
        cout << "      But if you fail twice, you'll lose a life!\n";
        cout << "  You begin with 5 lives and if you run out- Game Over!\n";
        cout << "                Example: 5 + 7 = ?\n";
        cout << "                  Your Answer: 12\n";
        cout << " No answers will be negative, so enter -1 to exit anytime!\n";
        cout << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
        cout <<                  "Enter 1 to begin! \n";

        //create a loop to handle start command, error check, and allow for exit. 
        cout << "Enter: ";
        cin >> start_command;

        while (start_command != 1 && start_command != -1) {
                cout << "please enter 1 to begin or -1 to quit!\n";
                cout << "Enter: ";
                cin >> start_command;
        }

        if (start_command == -1) {
                cout << "Whyd you even try and play in the first place bozo?\n";
                return 0;
        }

        //initialize question generation loop when player is living, generate random values, select operator, calculate correct answer.
        while (player_life > 0) {

                //reset special variables each loop
                attempts = 0;
                player_answer = 0;

                num1 = rand() % 20;
                num2 = rand() % 20;
                operator_choice = rand() % 3;

                if (operator_choice == 0) {
                        correct_answer = num1 + num2;
                        operator_symbol = '+';
                } else if (operator_choice == 1) {
                           correct_answer = num1 - num2;
                           operator_symbol = '-';

                       if (correct_answer < 0) {
                           switch_var = num1;
                           num1 = num2;
                           num2 = switch_var;
                           correct_answer = num1 - num2;
                           operator_symbol = '-';
                }

                } else if (operator_choice == 2) {
                        correct_answer = num1 * num2;
                        operator_symbol = '*';
                }

                answered_correctly = false;

        //initialize question answering loop while player has lives, the answer is not correct, and the player is not exiting.
        while (attempts < 2 && !answered_correctly && player_answer != -1) {
                cout << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
                cout << "What is " << num1 << " " << operator_symbol << " " << num2 << "?\n";
                cout << "Your Answer: ";
                cin >> player_answer;
                cout << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";


                if (player_answer == -1) {
                        cout << "Exiting the game! Thanks for playing!\n";
                        return 0;
                }

                if ( player_answer == correct_answer) {
                        cout << "Correct! Good Job!\n";
                        cout << "Current lives: " << player_life << "/5\n";
                        game_score ++;
                        answered_correctly = true;

                } else {
                        attempts ++;
                        if (attempts == 2)  {
                        cout << "Wrong again! lose a life! The correct answer was: " << correct_answer << ".\n";
                        player_life --;
                        cout << "Current lives: " << player_life << "/5\n";

                } else {
                        cout << "Wrong answer, try again!:\n";
                        cout << "Attempts remaining: 1\n";

                }
               }
              }
             }
        //verify valid game-over and print score
        if (player_life == 0) {
        cout << "Game Over! Your score was: "  << game_score << "\n";
        }
        return 0;

}
                                                                                                                                                                                              121,10-17     Bot

                                                                                                                                                                                              1,17          Top
